{"version":3,"sources":["services/FetchAPI.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Modal.js","components/Loader.js","components/Button.js","App.js","index.js"],"names":["api","imagesFetch","nameImage","page","imagesArray","fetch","then","r","ok","json","length","Promise","reject","Error","SearchBar","onSubmit","useState","setNameImage","keySearch","shortid","generate","className","e","preventDefault","trim","toast","error","type","id","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","tags","largeImageURL","onClick","src","alt","ImageGallery","arrayImages","map","Modal","onClose","children","useEffect","window","addEventListener","exitModal","removeEventListener","code","target","modalRoot","document","querySelector","createPortal","LoaderFunc","color","height","width","Button","Finder","setImagesArray","loading","setLoading","selectedImage","setSelectedImage","setPage","showModal","setShowModal","setError","searchImagesFetch","Api","imagesArrayFetch","checkNewFetchImagesArray","hits","catch","finally","prevState","reset","currentImage","autoClose","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cdcdab1.chunk.js","sourcesContent":["function imagesFetch(nameImage, page, imagesArray) {\r\n  const KEY = \"key=21324053-9f61ed863564998c3c32e619e\";\r\n  const GENERAL_LINK = \"https://pixabay.com/api/\";\r\n\r\n  return fetch(\r\n    `${GENERAL_LINK}?${KEY}&q=${nameImage}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n\r\n    if (imagesArray.length === 0) {\r\n      return Promise.reject(new Error(\"Картинки с таким именем отсутсвуют\"));\r\n    }\r\n  });\r\n}\r\nconst api = {\r\n  imagesFetch,\r\n};\r\n\r\nexport default api;","import { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [nameImage, setNameImage] = useState(\"\");\r\n\r\n  const onValueInput = (e) => {\r\n    setNameImage(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const onSubmitFetch = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nameImage.trim() === \"\") {\r\n      toast.error(\"Enter your query\");\r\n      return;\r\n    }\r\n    onSubmit(nameImage.trim());\r\n    setNameImage(\"\");\r\n  };\r\n\r\n  const keySearch = shortid.generate();\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmitFetch}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          id={keySearch}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"name\"\r\n          value={nameImage}\r\n          onChange={onValueInput}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","  \r\nimport React from \"react\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  tags,\r\n  largeImageURL,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <li\r\n      onClick={() => onClick(largeImageURL, tags)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"../styles/styles.css\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({ arrayImages, onSubmit }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {arrayImages.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          tags={tags}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onSubmit}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", exitModal);\r\n    return () => window.removeEventListener(\"keydown\", exitModal);\r\n  }, []);\r\n\r\n  const exitModal = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const modalRoot = document.querySelector(\"#modal-root\");\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={exitModal}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nexport default function LoaderFunc() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={200} width={200} />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nfunction Button({ children, onClick }) {\r\n  return (\r\n    <div className=\"containerBtn-loadMore\">\r\n      <button className=\"Button\" onClick={onClick}>\r\n        {children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Button;","import { useState, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Api from \"./services/FetchAPI\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGalleryItem from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal\";\nimport Loader from \"./components/Loader\";\nimport Button from \"./components/Button\";\nimport \"./styles/styles.css\";\n\nexport default function Finder() {\n  const [nameImage, setNameImage] = useState(\"\");\n  const [imagesArray, setImagesArray] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n\nuseEffect(() => {\n    if (nameImage === \"\") {\n      return;\n    }\n    searchImagesFetch();\n  }, [nameImage]);\n\n  const searchImagesFetch = () => {\n    setLoading(true);\n\n    Api.imagesFetch(nameImage, page, imagesArray)\n      .then((imagesArrayFetch) =>\n        checkNewFetchImagesArray(imagesArrayFetch.hits)\n      )\n      .catch((error) => setError(error))\n      .finally(\n        () => setLoading(false),\n        setPage((prevState) => prevState + 1)\n      );\n  };\n\nconst checkNewFetchImagesArray = (imagesArrayFetch) => {\n    imagesArrayFetch === []\n      ? setImagesArray(imagesArrayFetch)\n      : setImagesArray((prevState) => [...prevState, ...imagesArrayFetch]);\n  };\n\n  const toggleModal = () => {\n        setShowModal(!showModal);\n  };\n\n  const isHandleFormSubmit = (nameImage) => {\n    reset();\n    setNameImage(nameImage);\n  };\n\n  const reset = () => {\n    setPage(1);\n    setImagesArray([]);\n  };\n\n  const isCurrentImage = (currentImage, tags) => {\n    setSelectedImage([currentImage, tags]);\n    setShowModal(true);\n  };\n\n  const scrollGallery = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }, 1000);\n  };\n  const onClickLoadMore = () => {\n    searchImagesFetch();\n    scrollGallery();\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={isHandleFormSubmit} />\n\n      {imagesArray.length === 0 && (\n        <div className=\"container-paragraphInfo\">\n          <p className=\"paragraphInfo\">\n            No images for your query {`${nameImage}`}\n          </p>\n        </div>\n      )}\n\n      {imagesArray && (\n        <ImageGalleryItem arrayImages={imagesArray} onSubmit={isCurrentImage} />\n      )}\n      {showModal && (\n        <Modal onClose={() => toggleModal()}>\n          <img src={selectedImage[0]} alt={selectedImage[1]} />\n        </Modal>\n      )}\n\n      <ToastContainer autoClose={3000} />\n      {loading && <Loader />}\n\n      {imagesArray.length !== 0 && (\n        <Button onClick={onClickLoadMore}>Load more</Button>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Finder from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <Finder />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}